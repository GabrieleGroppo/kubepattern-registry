{
    "version": "kubepattern.sigemi.it/v1",
    "kind": "Pattern",
    "metadata": {
        "name": "simple-predictable-demands",
        "displayName": "Simple Predictable Demands",
        "patternType": "FOUNDATIONAL",
        "severity": "WARNING",
        "category": "architecture",
        "docUrl": "https://kubernetes.io/docs/concepts/workloads/pods/simple-predictable-demands/",
        "gitUrl": "https://github.com/GabrieleGroppo/kubepattern-registry/tree/main/doc/sidecar-pattern.md",
        "patternURI": "kubepattern://foundational/simple-predictable-demands"
    },
    "spec": {
        "description": "Identifies pods that have simple and predictable resource demands but lack explicit resource limits. Setting resource limits for such pods is crucial to prevent resource contention, ensure fair resource allocation, and maintain cluster stability. This pattern helps in identifying pods that could benefit from defined resource limits to enhance overall cluster performance and reliability.",
        "message": "Pod '{{single-pod.metadata.name}}' in namespace '{{single-pod.metadata.namespace}}' has simple and predictable resource demands but does not have resource limits defined for CPU and/or memory. It is recommended to set appropriate resource limits to prevent resource contention and ensure stable performance within the cluster.",
        "topology": "SINGLE",
        "leader": "single-pod",
        "resources": [
            {
                "resource": "Pod",
                "id": "single-pod",
                "filters": {
                    "matchAll": null,
                    "matchNone": [
                        {
                            "key": ".metadata.namespace",
                            "operator": "EQUALS",
                            "values": [
                                "kube-system",
                                "kube-public",
                                "kube-node-lease",
                                "krateo-system"
                            ]
                        }
                    ],
                    "matchAny": [
                        {
                            "key": ".spec.containers[*].resources.limits.cpu",
                            "operator": "IS_EMPTY",
                            "values": []
                        },
                        {
                            "key": ".spec.containers[*].resources.limits.memory",
                            "operator": "IS_EMPTY",
                            "values": []
                        }
                    ]
                }
            }
        ],
        "relationships": []
    }
}